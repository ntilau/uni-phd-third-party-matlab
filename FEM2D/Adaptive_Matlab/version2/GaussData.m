function [qpts,qwts]=GaussData(p,a,b)

% [qpts,qwts]=GaussData(prec,a,b)
%
%   This function produces the nodes and weights
%   for the Gaussian quadrature rule on [a,b] having
%   degree of precision prec.  The precision is
%   limited to 0<=prec<=23.
%
%   a and b are optional; the default values are
%   a=-1, b=1.

%   This routine is part of the MATLAB Fem code that
%   accompanies "Understanding and Implementing the Finite
%   Element Method" by Mark S. Gockenbach (copyright SIAM 2006).

% Store the nodes and weights:

nodes=[
   0.0000000000000000e+00
  -5.7735026918962573e-01
   5.7735026918962573e-01
  -7.7459666924148340e-01
   0.0000000000000000e+00
   7.7459666924148340e-01
  -8.6113631159405302e-01
  -3.3998104358485626e-01
   3.3998104358485626e-01
   8.6113631159405291e-01
  -9.0617984593866396e-01
  -5.3846931010568289e-01
   0.0000000000000000e+00
   5.3846931010568300e-01
   9.0617984593866385e-01
  -9.3246951420315205e-01
  -6.6120938646626459e-01
  -2.3861918608319677e-01
   2.3861918608319677e-01
   6.6120938646626470e-01
   9.3246951420315205e-01
  -9.4910791234275904e-01
  -7.4153118559939368e-01
  -4.0584515137739718e-01
   0.0000000000000000e+00
   4.0584515137739707e-01
   7.4153118559939446e-01
   9.4910791234275904e-01
  -9.6028985649753695e-01
  -7.9666647741362617e-01
  -5.2553240991632888e-01
  -1.8343464249564978e-01
   1.8343464249564989e-01
   5.2553240991632899e-01
   7.9666647741362606e-01
   9.6028985649753684e-01
  -9.6816023950762597e-01
  -8.3603110732663699e-01
  -6.1337143270059025e-01
  -3.2425342340380880e-01
   0.0000000000000000e+00
   3.2425342340380880e-01
   6.1337143270059080e-01
   8.3603110732663488e-01
   9.6816023950762697e-01
  -9.7390652851717197e-01
  -8.6506336668898398e-01
  -6.7940956829902455e-01
  -4.3339539412924699e-01
  -1.4887433898163116e-01
   1.4887433898163116e-01
   4.3339539412924699e-01
   6.7940956829902444e-01
   8.6506336668898398e-01
   9.7390652851717197e-01
  -9.7822865814603999e-01
  -8.8706259976811996e-01
  -7.3015200657404225e-01
  -5.1909612920681159e-01
  -2.6954315595234490e-01
   0.0000000000000000e+00
   2.6954315595234490e-01
   5.1909612920681170e-01
   7.3015200657405002e-01
   8.8706259976809299e-01
   9.7822865814605797e-01
  -9.8156063424673201e-01
  -9.0411725637045204e-01
  -7.6990267419431768e-01
  -5.8731795428661426e-01
  -3.6783149899818035e-01
  -1.2523340851146880e-01
   1.2523340851146880e-01
   3.6783149899818035e-01
   5.8731795428661426e-01
   7.6990267419431779e-01
   9.0411725637045204e-01
   9.8156063424673201e-01];
weights=[
   2.0000000000000000e+00
   1.0000000000000000e+00
   1.0000000000000000e+00
   5.5555555555555525e-01
   8.8888888888888895e-01
   5.5555555555555525e-01
   3.4785484513745391e-01
   6.5214515486254621e-01
   6.5214515486254621e-01
   3.4785484513745391e-01
   2.3692688505618870e-01
   4.7862867049936653e-01
   5.6888888888888889e-01
   4.7862867049936653e-01
   2.3692688505618870e-01
   1.7132449237917091e-01
   3.6076157304813788e-01
   4.6791393457269131e-01
   4.6791393457269131e-01
   3.6076157304813788e-01
   1.7132449237917091e-01
   1.2948496616886801e-01
   2.7970539148927831e-01
   3.8183005050511859e-01
   4.1795918367346940e-01
   3.8183005050511881e-01
   2.7970539148927598e-01
   1.2948496616886970e-01
   1.0122853629037380e-01
   2.2238103445337859e-01
   3.1370664587788738e-01
   3.6268378337836188e-01
   3.6268378337836188e-01
   3.1370664587788738e-01
   2.2238103445337859e-01
   1.0122853629037380e-01
   8.1274388361575897e-02
   1.8064816069485429e-01
   2.6061069640293560e-01
   3.1234707704000292e-01
   3.3023935500125973e-01
   3.1234707704000247e-01
   2.6061069640293533e-01
   1.8064816069485770e-01
   8.1274388361572095e-02
   6.6671344308686806e-02
   1.4945134915057301e-01
   2.1908636251598321e-01
   2.6926671930999679e-01
   2.9552422471475293e-01
   2.9552422471475293e-01
   2.6926671930999679e-01
   2.1908636251598321e-01
   1.4945134915057301e-01
   6.6671344308686806e-02
   5.5668567116215838e-02
   1.2558036946487430e-01
   1.8629021092774040e-01
   2.3319376459199270e-01
   2.6280454451024660e-01
   2.7292508677790062e-01
   2.6280454451024660e-01
   2.3319376459199331e-01
   1.8629021092773390e-01
   1.2558036946491319e-01
   5.5668567116169583e-02
   4.7175336386475468e-02
   1.0693932599536370e-01
   1.6007832854335860e-01
   2.0316742672306720e-01
   2.3349253653835339e-01
   2.4914704581340269e-01
   2.4914704581340269e-01
   2.3349253653835339e-01
   2.0316742672306720e-01
   1.6007832854335860e-01
   1.0693932599536370e-01
   4.7175336386475468e-02];

% The floor((p+2)/2)-point rule has precision p.

n=floor((p+2)/2);

% Extract the nodes and weights

ptr1=(n-1)*n/2+1;
ptr2=n*(n+1)/2;
qpts=nodes(ptr1:ptr2);
qwts=weights(ptr1:ptr2);

if nargin==3
   r=0.5*(b-a);
   qpts=a+r*(qpts+1);
   qwts=r*qwts;
end
